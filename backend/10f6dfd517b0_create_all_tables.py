"""create_all_tables

Revision ID: 10f6dfd517b0
Revises: cf377878fe18
Create Date: 2025-07-12 22:40:52.270063

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '10f6dfd517b0'
down_revision = 'cf377878fe18'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Primero eliminar la restricción de clave foránea
    op.drop_constraint('products_product_type_id_fkey', 'products', type_='foreignkey')
    op.drop_column('products', 'product_type_id')
    
    # Luego eliminar la tabla product_types
    op.drop_index('ix_product_types_id', table_name='product_types')
    op.drop_table('product_types')
    
    # Agregar columnas a order_items
    op.add_column('order_items', sa.Column('color_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'order_items', 'colors', ['color_id'], ['id'])
    
    # Agregar columnas a users
    op.add_column('users', sa.Column('adress', sa.String(), nullable=True))
    op.add_column('users', sa.Column('city', sa.String(), nullable=True))
    op.add_column('users', sa.Column('role_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'users', 'roles', ['role_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Revertir cambios en users
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'role_id')
    op.drop_column('users', 'city')
    op.drop_column('users', 'adress')
    
    # Revertir cambios en order_items
    op.drop_constraint(None, 'order_items', type_='foreignkey')
    op.drop_column('order_items', 'color_id')
    
    # Recrear tabla product_types
    op.create_table('product_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='product_types_pkey'),
    sa.UniqueConstraint('name', name='product_types_name_key')
    )
    op.create_index('ix_product_types_id', 'product_types', ['id'], unique=False)
    
    # Recrear columna y restricción en products
    op.add_column('products', sa.Column('product_type_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('products_product_type_id_fkey', 'products', 'product_types', ['product_type_id'], ['id'])
    # ### end Alembic commands ### 